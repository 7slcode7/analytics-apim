<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>APIM_USER_AGENT_STATS</Name>
<Script>
    create temporary table APIRequestData USING CarbonAnalytics OPTIONS(tableName "ORG_WSO2_APIMGT_STATISTICS_REQUEST");
    CREATE TEMPORARY TABLE API_REQUEST_USER_AGENT_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQUEST_USER_AGENT_SUMMARY",
    schema "api string -i,
    version string -i,
    apiPublisher string -i,
    tenantDomain string -i,
    total_request_count int -i,
    year int -i,
    month int -i,
    day int -i,
    requestTime long -i,
    userAgent string -i",
    primaryKeys "api,version,apiPublisher,year,month,day,userAgent,tenantDomain"
    );
    insert into table API_REQUEST_USER_AGENT_SUMMARY_FINAL select api,version, apiPublisher,tenantDomain,
    sum(request) as total_request_count,
    substring(cast(first(requestTime)/1000 as timestamp),0,4),
    substring(cast(first(requestTime)/1000 as timestamp),6,2),
    substring(cast(first(requestTime)/1000 as timestamp),9,2),
    first(requestTime),
    userAgent
    from APIRequestData group by api,version,apiPublisher,userAgent,tenantDomain,
    substring(cast(requestTime/1000 as timestamp),0,4),
    substring(cast(requestTime/1000 as timestamp),6,2),
    substring(cast(requestTime/1000 as timestamp),9,2);

    CREATE TEMPORARY TABLE API_REQUEST_USER_BROWSER_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQ_USER_BROW_SUMMARY",
    schema "api string -i,
    version string -i,
    apiPublisher string -i,
    tenantDomain string -i,
    total_request_count int -i,
    year int -i,
    month int -i,
    day int -i,
    requestTime long -i,
    os string -i,
    browser string -i,
    key_os_browser_facet facet -i",
    primaryKeys "api,version,apiPublisher,year,month,day,os,browser,tenantDomain"
    );
    insert INTO table API_REQUEST_USER_BROWSER_SUMMARY_FINAL select apidata.api,apidata.version, apidata.apiPublisher,apidata.tenantDomain,
    sum(apidata.total_request_count) as total_request_count,apidata.year,apidata.month,apidata.day,first(requestTime),getOSFromUserAgent(apidata.userAgent),getBrowserFromUserAgent(apidata.userAgent),facet2(getOSFromUserAgent(apidata.userAgent),getBrowserFromUserAgent(apidata.userAgent))
    from API_REQUEST_USER_AGENT_SUMMARY_FINAL as apidata group by apidata.api,apidata.version,apidata.apiPublisher,apidata.year,apidata.month,apidata.day,apidata.userAgent,getOSFromUserAgent(apidata.userAgent),getBrowserFromUserAgent(apidata.userAgent),apidata.tenantDomain;
</Script>
    <CronExpression>0 0/5 * 1/1 * ? *</CronExpression>
</Analytics>
