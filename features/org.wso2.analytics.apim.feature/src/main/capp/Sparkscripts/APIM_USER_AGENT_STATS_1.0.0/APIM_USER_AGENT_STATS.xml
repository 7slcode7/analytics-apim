<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>APIM_USER_AGENT_STATS</Name>
<Script>
        CREATE TEMPORARY TABLE APIUserBrowserData USING CarbonJDBC OPTIONS (dataSource "WSO2AM_STATS_DB", tableName "API_REQ_USER_BROW_SUMMARY",
    schema "api STRING ,
    version STRING ,
    apiPublisher STRING ,
    tenantDomain STRING ,
    total_request_count INTEGER ,
    year INTEGER ,
    month INTEGER ,
    day INTEGER ,
    requestTime LONG ,
    os STRING ,
    browser STRING",
    primaryKeys "api,version,apiPublisher,year,month,day,os,browser,tenantDomain"
    );
    create temporary table APIRequestData USING CarbonAnalytics OPTIONS(tableName "ORG_WSO2_APIMGT_STATISTICS_PERMINUTEREQUEST");
    CREATE TEMPORARY TABLE API_REQUEST_USER_AGENT_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQUEST_USER_AGENT_SUMMARY",
    schema "api string -i,
    version string -i,
    apiPublisher string -i,
    tenantDomain string -i,
    total_request_count int -i,
    year int -i,
    month int -i,
    day int -i,
    requestTime long -i,
    userAgent string -i",
    primaryKeys "api,version,apiPublisher,year,month,day,userAgent,tenantDomain"
    );

    <!--incrementally processed per month request data table-->
    create temporary table APIMGT_PERDAY_DATA USING CarbonAnalytics OPTIONS(tableName "ORG_WSO2_APIMGT_STATISTICS_PERDAYREQUEST");

    insert into table API_REQUEST_USER_AGENT_SUMMARY_FINAL select a.api,version, a.apiPublisher,a.tenantDomain,
    sum(b.total_request_count_per_day) as total_request_count,
    a.year, a.month, a.day,
    first(a.requestTime),
    a.userAgent
    from APIRequestData as a, APIMGT_PERDAY_DATA as b
    where a.year=b.year
    and a.month=b.month
    and a.day=b.day
    and a.consumerKey=b.consumerKey
    and a.context=b.context
    and a.api_version=b.api_version
    and a.userId=b.userId
    and a.hostName=b.hostName
    and a.apiPublisher=b.apiPublisher
    and a.resourceTemplate=b.resourceTemplate
    and a.method=b.method
    and a.userAgent=b.userAgent
    and a.clientIp=b.clientIp
    group by b.api,version,b.apiPublisher,b.userAgent,b.tenantDomain,
    b.year, b.month, b.day;

    CREATE TEMPORARY TABLE API_REQUEST_USER_BROWSER_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQ_USER_BROW_SUMMARY",
    schema "api string -i,
    version string -i,
    apiPublisher string -i,
    tenantDomain string -i,
    total_request_count int -i,
    year int -i,
    month int -i,
    day int -i,
    requestTime long -i,
    os string -i,
    browser string -i,
    key_os_browser_facet facet -i",
    primaryKeys "api,version,apiPublisher,year,month,day,os,browser,tenantDomain"
    );
    insert INTO table API_REQUEST_USER_BROWSER_SUMMARY_FINAL select apidata.api,apidata.version, apidata.apiPublisher,apidata.tenantDomain,
    sum(apidata.total_request_count) as total_request_count,apidata.year,apidata.month,apidata.day,first(requestTime),getOSFromUserAgent(apidata.userAgent),getBrowserFromUserAgent(apidata.userAgent),facet2(getOSFromUserAgent(apidata.userAgent),getBrowserFromUserAgent(apidata.userAgent))
    from API_REQUEST_USER_AGENT_SUMMARY_FINAL as apidata group by apidata.api,apidata.version,apidata.apiPublisher,apidata.year,apidata.month,apidata.day,apidata.userAgent,getOSFromUserAgent(apidata.userAgent),getBrowserFromUserAgent(apidata.userAgent),apidata.tenantDomain;
    INSERT INTO TABLE APIUserBrowserData SELECT api,version,apiPublisher,tenantDomain,total_request_count,year,month,day,requestTime,os,browser FROM API_REQUEST_USER_BROWSER_SUMMARY_FINAL;
</Script>
    <CronExpression>0 0/5 * 1/1 * ? *</CronExpression>
</Analytics>
